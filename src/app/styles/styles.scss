
// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use '@angular/material' as mat;
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

// // Define the palettes for your theme using the Material Design palettes available in palette.scss
// // (imported above). For each palette, you can optionally specify a default, lighter, and darker
// // hue. Available color palettes: https://material.io/design/color/
// $rest-countries-api-primary: mat.define-palette(mat.$indigo-palette);
// $rest-countries-api-accent: mat.define-palette(mat.$pink-palette, A200, A100, A400);

// // The warn palette is optional (defaults to red).
// $rest-countries-api-warn: mat.define-palette(mat.$red-palette);

// // Create the theme object. A theme consists of configurations for individual
// // theming systems such as "color" or "typography".
// $rest-countries-api-theme: mat.define-light-theme((
//   color: (
//     primary: $rest-countries-api-primary,
//     accent: $rest-countries-api-accent,
//     warn: $rest-countries-api-warn,
//   )
// ));

// // Include theme styles for core and each component used in your app.
// // Alternatively, you can import and @include the theme mixins for each component
// // that you are using.
// @include mat.all-component-themes($rest-countries-api-theme);

@import url("https://fonts.googleapis.com/css2?family=Nunito+Sans:wght@300;400;600;800&display=swap");
$theme-map: null;

// Colors
$light-foreground: #ffffff;
$light-background: #fafafa;
$light-font-color: #111517;
$light-placeholder-color: #848484;

$dark-foreground: #2b3844;
$dark-background: #202c36;
$dark-font-color: #ffffff;
$dark-placeholder-color: #ffffff;

// Typography
$font-family: "Nunito Sans", sans-serif;
$base-font-size: 14px;
$base-line-height: 16px;
$base-font-style: normal;
$base-border-radius: 5px;

// Layouts
$desktop-max-width: 1440px;
$box-shadow: 0px 0px 7px 2px rgba(0, 0, 0, 0.0294384);

$themes: (
  light: (
    foreground: $light-foreground,
    background: $light-background,
    color: $light-font-color,
    placeholderColor: $light-placeholder-color,
  ),
  dark: (
    foreground: $dark-foreground,
    background: $dark-background,
    color: $dark-font-color,
    placeholderColor: $dark-placeholder-color,
  ),
);
// https://medium.com/@katiemctigue/how-to-create-a-dark-mode-in-sass-609f131a3995
// TODO figure out a way to add transition
@mixin themed() {
  @each $theme, $map in $themes {
    .theme#{$theme} & {
      $theme-map: () !global;
      @each $key, $submap in $map {
        $value: map-get(map-get($themes, $theme), "#{$key}");
        $theme-map: map-merge(
          $theme-map,
          (
            $key: $value,
          )
        ) !global;
      }
      @content;
      $theme-map: null !global;
    }
  }
}

@mixin themedGlobal() {
  @each $theme, $map in $themes {
    .theme#{$theme} {
      $theme-map: () !global;
      @each $key, $submap in $map {
        $value: map-get(map-get($themes, $theme), "#{$key}");
        $theme-map: map-merge(
          $theme-map,
          (
            $key: $value,
          )
        ) !global;
      }
      @content;
      $theme-map: null !global;
    }
  }
}


@function theme($key) {
  @return map-get($theme-map, $key);
}

// Mixins
@mixin base-typography {
  font-family: $font-family;
  font-size: $base-font-size;
  line-height: $base-line-height;
  font-style: $base-font-style;
  font-weight: 300;
}

@mixin header {
  font-size: 24px;
  line-height: 33px;
  font-weight: 800;
}

@mixin header-medium {
  font-size: 18px;
  line-height: 26px;
  font-weight: 800px;
}

@mixin button {
  font-size: 16px;
  line-height: 22px;
  font-weight: 600;
}

// Atoms
html,
body {
  height: 100%;
  padding: 0;
  margin: 0;
  display: flex;
  flex-direction: column;

  @include base-typography();
}

* {
  box-sizing: border-box;
}

// TODO: Make better and more DRY
@include themedGlobal() {
  background-color: theme("background");
  color: theme("color");
}


header {
  width: 100%;
  height: 80px;

  @include themed() {
    background-color: theme("foreground");
    color: theme("color");
  }

  display: flex;
  justify-content: center;

  .container {
    display: flex;
    justify-content: space-between;
    align-items: center;
  }

  box-shadow: $box-shadow;
}

main {
  width: 100%;
  display: flex;
  justify-content: center;
}

h1 {
  @include header();
  margin: 24px;
}

button {
  background: transparent;
  border: none;
  display: flex;
  align-items: center;
  cursor: pointer;

  @include themed() {
    color: theme("color");
  }

  @include button();
}

input {
  height: 56px;
  width: -webkit-fill-available;

  @include themed() {
    background-color: theme("foreground");
    color: theme("placeholderColor");
  }

  border: none;
  border-radius: $base-border-radius;
  box-shadow: $box-shadow;
  font-size: 14px;
  font-weight: 400;
  line-height: 20px;
}


// Elements

.container {
  width: 100%;
  max-width: $desktop-max-width;
  padding: 0 2rem;
}

.form-field {
  position: relative;
  margin: 12px 0;
  width: 100%;

  @media screen and (min-width: 800px) {
    max-width: 375px;
    margin: 48px 0;

  }

  @media screen and (min-width: 1000px) {
    margin: 48px 0;
    max-width: 480px;
  }


  .prefix {
    position: absolute;
    top: 18px;
    left: 32px;
  }

  input {
    padding-left: 74px;
  }
}

.select-dropdown-styles {
  margin-top: 38px;
  box-shadow: $box-shadow;
  width: 200px !important;
  min-width: 200px !important;
  margin-left: 16px;

  @include themed() {
    background-color: theme("foreground");
    color: theme("color");
    border: 1px solid theme("background");
  }

  .mat-option .mat-option-text {
    @include base-typography();
    font-weight: 400;
    line-height: 20px;
  }
}

.mat-form-field-wrapper {
  padding-bottom: 0 !important;
}
